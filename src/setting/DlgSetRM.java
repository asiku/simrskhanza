/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DlgAdmin.java
 *
 * Created on 21 Jun 10, 20:53:44
 */

package setting;

import fungsi.WarnaTable;
import fungsi.batasInput;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author perpustakaan
 */
public class DlgSetRM extends javax.swing.JDialog {
    private final DefaultTableModel tabMode,tabMode2,tabMode3;
    private Connection koneksi=koneksiDB.condb();
    private sekuel Sequel=new sekuel();
    private validasi Valid=new validasi();
    private PreparedStatement ps,ps2,ps3;
    private ResultSet rs;

    /** Creates new form DlgAdmin
     * @param parent
     * @param modal */
    public DlgSetRM(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocation(10,10);
        setSize(457,249);
        
        tabMode=new DefaultTableModel(null,new Object[]{"No.Rekam Medis Terakhir Digunakan"}){
              @Override public boolean isCellEditable(int rowIndex, int colIndex){return false;}
        };

        tbNoRM.setModel(tabMode);
        //tampilnorm();
        //tbJabatan.setDefaultRenderer(Object.class, new WarnaTable(Scroll.getBackground(),Color.GREEN));
        tbNoRM.setPreferredScrollableViewportSize(new Dimension(500,500));
        tbNoRM.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (int i = 0; i < 1; i++) {
            TableColumn column = tbNoRM.getColumnModel().getColumn(i);
            if(i==0){
                column.setPreferredWidth(350);
            }
        }

        tbNoRM.setDefaultRenderer(Object.class, new WarnaTable());
        
        tabMode2=new DefaultTableModel(null,new Object[]{"Model Pengurutan No.R.M","Gunakan Tahun","Gunakan Bulan","Tahun & Bulan"}){
              @Override public boolean isCellEditable(int rowIndex, int colIndex){return false;}
        };

        tbNoUrut.setModel(tabMode2);
        //tampilnorm();
        //tbJabatan.setDefaultRenderer(Object.class, new WarnaTable(Scroll.getBackground(),Color.GREEN));
        tbNoUrut.setPreferredScrollableViewportSize(new Dimension(500,500));
        tbNoUrut.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (int i = 0; i < 4; i++) {
            TableColumn column = tbNoUrut.getColumnModel().getColumn(i);
            if(i==0){
                column.setPreferredWidth(200);
            }else if(i==1){
                column.setPreferredWidth(100);
            }else if(i==2){
                column.setPreferredWidth(100);
            }else if(i==3){
                column.setPreferredWidth(100);
            }
        }

        tbNoUrut.setDefaultRenderer(Object.class, new WarnaTable());
        
        tabMode3=new DefaultTableModel(null,new Object[]{"Kelurahan","Kecamatan","Kabupaten"}){
              @Override public boolean isCellEditable(int rowIndex, int colIndex){return false;}
        };

        tbAlamat.setModel(tabMode3);
        //tampilnorm();
        //tbJabatan.setDefaultRenderer(Object.class, new WarnaTable(Scroll.getBackground(),Color.GREEN));
        tbAlamat.setPreferredScrollableViewportSize(new Dimension(500,500));
        tbAlamat.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (int i = 0; i < 3; i++) {
            TableColumn column = tbAlamat.getColumnModel().getColumn(i);
            if(i==0){
                column.setPreferredWidth(150);
            }else if(i==1){
                column.setPreferredWidth(150);
            }else if(i==2){
                column.setPreferredWidth(150);
            }
        }

        tbAlamat.setDefaultRenderer(Object.class, new WarnaTable());

        norm.setDocument(new batasInput((byte)10).getKata(norm));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalFrame1 = new widget.InternalFrame();
        panelGlass5 = new widget.panelisi();
        BtnSimpan = new widget.Button();
        BtnHapus = new widget.Button();
        BtnKeluar = new widget.Button();
        TabRawat = new javax.swing.JTabbedPane();
        internalFrame2 = new widget.InternalFrame();
        panelGlass7 = new widget.panelisi();
        jLabel4 = new widget.Label();
        norm = new widget.TextBox();
        Scroll = new widget.ScrollPane();
        tbNoRM = new widget.Table();
        internalFrame3 = new widget.InternalFrame();
        Scroll2 = new widget.ScrollPane();
        tbNoUrut = new widget.Table();
        panelGlass8 = new widget.panelisi();
        jLabel5 = new widget.Label();
        cmburut = new widget.ComboBox();
        cmbYesTahun = new widget.ComboBox();
        jLabel6 = new widget.Label();
        jLabel7 = new widget.Label();
        cmbYesBulan = new widget.ComboBox();
        jLabel8 = new widget.Label();
        cmbPosisi = new widget.ComboBox();
        internalFrame4 = new widget.InternalFrame();
        Scroll3 = new widget.ScrollPane();
        tbAlamat = new widget.Table();
        panelGlass9 = new widget.panelisi();
        jLabel9 = new widget.Label();
        Kelurahan = new widget.ComboBox();
        Kecamatan = new widget.ComboBox();
        jLabel10 = new widget.Label();
        jLabel11 = new widget.Label();
        Kabupaten = new widget.ComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Setup Rekam Medis ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 70, 40))); // NOI18N
        internalFrame1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        panelGlass5.setName("panelGlass5"); // NOI18N
        panelGlass5.setPreferredSize(new java.awt.Dimension(55, 55));
        panelGlass5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        BtnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/save-16x16.png"))); // NOI18N
        BtnSimpan.setMnemonic('S');
        BtnSimpan.setText("Simpan");
        BtnSimpan.setToolTipText("Alt+S");
        BtnSimpan.setName("BtnSimpan"); // NOI18N
        BtnSimpan.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSimpanActionPerformed(evt);
            }
        });
        BtnSimpan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnSimpanKeyPressed(evt);
            }
        });
        panelGlass5.add(BtnSimpan);

        BtnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/stop_f2.png"))); // NOI18N
        BtnHapus.setMnemonic('H');
        BtnHapus.setText("Hapus");
        BtnHapus.setToolTipText("Alt+H");
        BtnHapus.setName("BtnHapus"); // NOI18N
        BtnHapus.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnHapusActionPerformed(evt);
            }
        });
        BtnHapus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnHapusKeyPressed(evt);
            }
        });
        panelGlass5.add(BtnHapus);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelGlass5.add(BtnKeluar);

        internalFrame1.add(panelGlass5, java.awt.BorderLayout.PAGE_END);

        TabRawat.setBackground(new java.awt.Color(250, 255, 245));
        TabRawat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(230, 235, 225)));
        TabRawat.setForeground(new java.awt.Color(50, 70, 40));
        TabRawat.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        TabRawat.setName("TabRawat"); // NOI18N
        TabRawat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabRawatMouseClicked(evt);
            }
        });

        internalFrame2.setBackground(new java.awt.Color(235, 255, 235));
        internalFrame2.setBorder(null);
        internalFrame2.setName("internalFrame2"); // NOI18N
        internalFrame2.setLayout(new java.awt.BorderLayout(1, 1));

        panelGlass7.setName("panelGlass7"); // NOI18N
        panelGlass7.setPreferredSize(new java.awt.Dimension(44, 47));
        panelGlass7.setLayout(null);

        jLabel4.setText("No.RM Terakhir Digunakan :");
        jLabel4.setName("jLabel4"); // NOI18N
        panelGlass7.add(jLabel4);
        jLabel4.setBounds(0, 12, 150, 23);

        norm.setHighlighter(null);
        norm.setName("norm"); // NOI18N
        norm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                normKeyPressed(evt);
            }
        });
        panelGlass7.add(norm);
        norm.setBounds(153, 12, 150, 23);

        internalFrame2.add(panelGlass7, java.awt.BorderLayout.PAGE_START);

        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);

        tbNoRM.setAutoCreateRowSorter(true);
        tbNoRM.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbNoRM.setName("tbNoRM"); // NOI18N
        tbNoRM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbNoRMMouseClicked(evt);
            }
        });
        tbNoRM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbNoRMKeyPressed(evt);
            }
        });
        Scroll.setViewportView(tbNoRM);

        internalFrame2.add(Scroll, java.awt.BorderLayout.CENTER);

        TabRawat.addTab(".: No.R.M. Terakhir  ", internalFrame2);

        internalFrame3.setBackground(new java.awt.Color(235, 255, 235));
        internalFrame3.setBorder(null);
        internalFrame3.setName("internalFrame3"); // NOI18N
        internalFrame3.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll2.setName("Scroll2"); // NOI18N
        Scroll2.setOpaque(true);

        tbNoUrut.setAutoCreateRowSorter(true);
        tbNoUrut.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbNoUrut.setName("tbNoUrut"); // NOI18N
        tbNoUrut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbNoUrutMouseClicked(evt);
            }
        });
        tbNoUrut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbNoUrutKeyPressed(evt);
            }
        });
        Scroll2.setViewportView(tbNoUrut);

        internalFrame3.add(Scroll2, java.awt.BorderLayout.CENTER);

        panelGlass8.setName("panelGlass8"); // NOI18N
        panelGlass8.setPreferredSize(new java.awt.Dimension(44, 47));
        panelGlass8.setLayout(null);

        jLabel5.setText("Pengurutan No.R.M. :");
        jLabel5.setName("jLabel5"); // NOI18N
        panelGlass8.add(jLabel5);
        jLabel5.setBounds(0, 12, 120, 23);

        cmburut.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Straight", "Middle", "Terminal" }));
        cmburut.setName("cmburut"); // NOI18N
        cmburut.setOpaque(false);
        cmburut.setPreferredSize(new java.awt.Dimension(55, 28));
        cmburut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmburutKeyPressed(evt);
            }
        });
        panelGlass8.add(cmburut);
        cmburut.setBounds(123, 12, 100, 23);

        cmbYesTahun.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
        cmbYesTahun.setName("cmbYesTahun"); // NOI18N
        cmbYesTahun.setOpaque(false);
        cmbYesTahun.setPreferredSize(new java.awt.Dimension(55, 28));
        cmbYesTahun.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbYesTahunKeyPressed(evt);
            }
        });
        panelGlass8.add(cmbYesTahun);
        cmbYesTahun.setBounds(323, 12, 60, 23);

        jLabel6.setText("Gunakan Tahun :");
        jLabel6.setName("jLabel6"); // NOI18N
        panelGlass8.add(jLabel6);
        jLabel6.setBounds(230, 12, 90, 23);

        jLabel7.setText("Gunakan Bulan :");
        jLabel7.setName("jLabel7"); // NOI18N
        panelGlass8.add(jLabel7);
        jLabel7.setBounds(385, 12, 90, 23);

        cmbYesBulan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
        cmbYesBulan.setName("cmbYesBulan"); // NOI18N
        cmbYesBulan.setOpaque(false);
        cmbYesBulan.setPreferredSize(new java.awt.Dimension(55, 28));
        cmbYesBulan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbYesBulanKeyPressed(evt);
            }
        });
        panelGlass8.add(cmbYesBulan);
        cmbYesBulan.setBounds(478, 12, 60, 23);

        jLabel8.setText("Tahun & Bulan :");
        jLabel8.setName("jLabel8"); // NOI18N
        panelGlass8.add(jLabel8);
        jLabel8.setBounds(540, 12, 87, 23);

        cmbPosisi.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Depan", "Belakang" }));
        cmbPosisi.setName("cmbPosisi"); // NOI18N
        cmbPosisi.setOpaque(false);
        cmbPosisi.setPreferredSize(new java.awt.Dimension(55, 28));
        cmbPosisi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbPosisiKeyPressed(evt);
            }
        });
        panelGlass8.add(cmbPosisi);
        cmbPosisi.setBounds(630, 12, 100, 23);

        internalFrame3.add(panelGlass8, java.awt.BorderLayout.PAGE_START);

        TabRawat.addTab(".: Pengurutan No.R.M  ", internalFrame3);

        internalFrame4.setBackground(new java.awt.Color(235, 255, 235));
        internalFrame4.setBorder(null);
        internalFrame4.setName("internalFrame4"); // NOI18N
        internalFrame4.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll3.setName("Scroll3"); // NOI18N
        Scroll3.setOpaque(true);

        tbAlamat.setAutoCreateRowSorter(true);
        tbAlamat.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbAlamat.setName("tbAlamat"); // NOI18N
        tbAlamat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbAlamatMouseClicked(evt);
            }
        });
        tbAlamat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbAlamatKeyPressed(evt);
            }
        });
        Scroll3.setViewportView(tbAlamat);

        internalFrame4.add(Scroll3, java.awt.BorderLayout.CENTER);

        panelGlass9.setName("panelGlass9"); // NOI18N
        panelGlass9.setPreferredSize(new java.awt.Dimension(44, 47));
        panelGlass9.setLayout(null);

        jLabel9.setText("Aktifkan Kelurahan :");
        jLabel9.setName("jLabel9"); // NOI18N
        panelGlass9.add(jLabel9);
        jLabel9.setBounds(0, 12, 110, 23);

        Kelurahan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
        Kelurahan.setName("Kelurahan"); // NOI18N
        Kelurahan.setOpaque(false);
        Kelurahan.setPreferredSize(new java.awt.Dimension(55, 28));
        Kelurahan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                KelurahanKeyPressed(evt);
            }
        });
        panelGlass9.add(Kelurahan);
        Kelurahan.setBounds(113, 12, 60, 23);

        Kecamatan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
        Kecamatan.setName("Kecamatan"); // NOI18N
        Kecamatan.setOpaque(false);
        Kecamatan.setPreferredSize(new java.awt.Dimension(55, 28));
        Kecamatan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                KecamatanKeyPressed(evt);
            }
        });
        panelGlass9.add(Kecamatan);
        Kecamatan.setBounds(303, 12, 60, 23);

        jLabel10.setText("Aktifkan Kecamatan :");
        jLabel10.setName("jLabel10"); // NOI18N
        panelGlass9.add(jLabel10);
        jLabel10.setBounds(180, 12, 120, 23);

        jLabel11.setText("Aktifkan Kabupaten :");
        jLabel11.setName("jLabel11"); // NOI18N
        panelGlass9.add(jLabel11);
        jLabel11.setBounds(365, 12, 120, 23);

        Kabupaten.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
        Kabupaten.setName("Kabupaten"); // NOI18N
        Kabupaten.setOpaque(false);
        Kabupaten.setPreferredSize(new java.awt.Dimension(55, 28));
        Kabupaten.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                KabupatenKeyPressed(evt);
            }
        });
        panelGlass9.add(Kabupaten);
        Kabupaten.setBounds(488, 12, 60, 23);

        internalFrame4.add(panelGlass9, java.awt.BorderLayout.PAGE_START);

        TabRawat.addTab(".: Pengaturan Alamat  ", internalFrame4);

        internalFrame1.add(TabRawat, java.awt.BorderLayout.CENTER);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSimpanActionPerformed
        if(TabRawat.getSelectedIndex()==0){
            if(norm.getText().trim().equals("")){
                Valid.textKosong(norm,"No.RM Terakhir");
            }else if(tabMode.getRowCount()==0){
                Sequel.menyimpan("set_no_rkm_medis","'"+norm.getText()+"'","No.RM Terakhir");
                tampilnorm();
                emptTeks();
            }else if(tabMode.getRowCount()>0){
                JOptionPane.showMessageDialog(null,"Maaf, Hanya diijinkan satu pengaturan ...!!!!");
                norm.requestFocus();
            }
        }else if(TabRawat.getSelectedIndex()==1){
            if(tabMode2.getRowCount()==0){
                Sequel.menyimpan("set_urut_no_rkm_medis","'"+cmburut.getSelectedItem()+"','"+cmbYesTahun.getSelectedItem()+"','"+cmbYesBulan.getSelectedItem()+"','"+cmbPosisi.getSelectedItem()+"'","Pengurutan");
                tampilurut();
            }else if(tabMode2.getRowCount()>0){
                JOptionPane.showMessageDialog(null,"Maaf, Hanya diijinkan satu pengaturan ...!!!!");
                cmburut.requestFocus();
            }
        }else if(TabRawat.getSelectedIndex()==2){
            if(tabMode3.getRowCount()==0){
                Sequel.menyimpan("set_alamat_pasien",
                        "'"+Kelurahan.getSelectedItem().toString().replaceAll("Yes","true").replaceAll("No","false")+"',"+
                        "'"+Kecamatan.getSelectedItem().toString().replaceAll("Yes","true").replaceAll("No","false")+"',"+
                        "'"+Kabupaten.getSelectedItem().toString().replaceAll("Yes","true").replaceAll("No","false")+"'","Pengaturan Alamat"
                );
                tampilalamat();
            }else if(tabMode3.getRowCount()>0){
                JOptionPane.showMessageDialog(null,"Maaf, Hanya diijinkan satu pengaturan ...!!!!");
                cmburut.requestFocus();
            }
        }
}//GEN-LAST:event_BtnSimpanActionPerformed

    private void BtnSimpanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnSimpanKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnSimpanActionPerformed(null);
        }else{
            Valid.pindah(evt,norm,BtnHapus);
        }
}//GEN-LAST:event_BtnSimpanKeyPressed

    private void BtnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnHapusActionPerformed
        if(TabRawat.getSelectedIndex()==0){
            Sequel.queryu("delete from set_no_rkm_medis");
            tampilnorm();
            emptTeks();
        }else if(TabRawat.getSelectedIndex()==1){
            Sequel.queryu("delete from set_urut_no_rkm_medis");
            tampilurut();
        }else if(TabRawat.getSelectedIndex()==2){
            Sequel.queryu("delete from set_alamat_pasien");
            tampilalamat();
        }
        
}//GEN-LAST:event_BtnHapusActionPerformed

    private void BtnHapusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnHapusKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnHapusActionPerformed(null);
        }else{
            Valid.pindah(evt, BtnSimpan, BtnKeluar);
        }
}//GEN-LAST:event_BtnHapusKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        if(tabMode.getRowCount()==0){
            JOptionPane.showMessageDialog(null,"Maaf, data No.RM Terakhir tidak boleh kosong ...!!!!");
            norm.requestFocus();
        }else if(! (tabMode.getRowCount()==0)) {
            dispose();
        }
}//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            dispose();
        }else{Valid.pindah(evt,BtnHapus,BtnSimpan);}
}//GEN-LAST:event_BtnKeluarKeyPressed

    private void tbNoRMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbNoRMMouseClicked
        if(tabMode.getRowCount()!=0){
            try {
                getDatanorm();
            } catch (java.lang.NullPointerException e) {
            }
        }
}//GEN-LAST:event_tbNoRMMouseClicked

    private void tbNoRMKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbNoRMKeyPressed
        if(tabMode.getRowCount()!=0){
            if((evt.getKeyCode()==KeyEvent.VK_ENTER)||(evt.getKeyCode()==KeyEvent.VK_UP)||(evt.getKeyCode()==KeyEvent.VK_DOWN)){
                try {
                    getDatanorm();
                } catch (java.lang.NullPointerException e) {
                }
            }
        }
}//GEN-LAST:event_tbNoRMKeyPressed

private void normKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_normKeyPressed
     Valid.pindah(evt, BtnKeluar,BtnSimpan);

}//GEN-LAST:event_normKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if(TabRawat.getSelectedIndex()==0){
            tampilnorm();
        }else if(TabRawat.getSelectedIndex()==1){
            tampilurut();
        }
    }//GEN-LAST:event_formWindowOpened

    private void TabRawatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabRawatMouseClicked
        if(TabRawat.getSelectedIndex()==0){
           tampilnorm();
        }else if(TabRawat.getSelectedIndex()==1){
           tampilurut();
        }else if(TabRawat.getSelectedIndex()==2){
           tampilalamat();
        }
    }//GEN-LAST:event_TabRawatMouseClicked

    private void cmburutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmburutKeyPressed
        Valid.pindah(evt, BtnKeluar,cmbYesTahun);
    }//GEN-LAST:event_cmburutKeyPressed

    private void cmbYesTahunKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbYesTahunKeyPressed
        Valid.pindah(evt, cmburut,BtnSimpan);
    }//GEN-LAST:event_cmbYesTahunKeyPressed

    private void tbNoUrutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbNoUrutKeyPressed
        if(tabMode2.getRowCount()!=0){
            if((evt.getKeyCode()==KeyEvent.VK_ENTER)||(evt.getKeyCode()==KeyEvent.VK_UP)||(evt.getKeyCode()==KeyEvent.VK_DOWN)){
                try {
                    getDataurut();
                } catch (java.lang.NullPointerException e) {
                }
            }
        }
    }//GEN-LAST:event_tbNoUrutKeyPressed

    private void tbNoUrutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbNoUrutMouseClicked
        if(tabMode.getRowCount()!=0){
            try {
                getDataurut();
            } catch (java.lang.NullPointerException e) {
            }
        }
    }//GEN-LAST:event_tbNoUrutMouseClicked

    private void cmbYesBulanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbYesBulanKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbYesBulanKeyPressed

    private void cmbPosisiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbPosisiKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPosisiKeyPressed

    private void tbAlamatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbAlamatMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbAlamatMouseClicked

    private void tbAlamatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbAlamatKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbAlamatKeyPressed

    private void KelurahanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KelurahanKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_KelurahanKeyPressed

    private void KecamatanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KecamatanKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_KecamatanKeyPressed

    private void KabupatenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KabupatenKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_KabupatenKeyPressed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgSetRM dialog = new DlgSetRM(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnHapus;
    private widget.Button BtnKeluar;
    private widget.Button BtnSimpan;
    private widget.ComboBox Kabupaten;
    private widget.ComboBox Kecamatan;
    private widget.ComboBox Kelurahan;
    private widget.ScrollPane Scroll;
    private widget.ScrollPane Scroll2;
    private widget.ScrollPane Scroll3;
    private javax.swing.JTabbedPane TabRawat;
    private widget.ComboBox cmbPosisi;
    private widget.ComboBox cmbYesBulan;
    private widget.ComboBox cmbYesTahun;
    private widget.ComboBox cmburut;
    private widget.InternalFrame internalFrame1;
    private widget.InternalFrame internalFrame2;
    private widget.InternalFrame internalFrame3;
    private widget.InternalFrame internalFrame4;
    private widget.Label jLabel10;
    private widget.Label jLabel11;
    private widget.Label jLabel4;
    private widget.Label jLabel5;
    private widget.Label jLabel6;
    private widget.Label jLabel7;
    private widget.Label jLabel8;
    private widget.Label jLabel9;
    private widget.TextBox norm;
    private widget.panelisi panelGlass5;
    private widget.panelisi panelGlass7;
    private widget.panelisi panelGlass8;
    private widget.panelisi panelGlass9;
    private widget.Table tbAlamat;
    private widget.Table tbNoRM;
    private widget.Table tbNoUrut;
    // End of variables declaration//GEN-END:variables

    private void tampilnorm() {
        Valid.tabelKosong(tabMode);
        try{   
            ps=koneksi.prepareStatement("select * from set_no_rkm_medis ");
            try {
                rs=ps.executeQuery();
                while(rs.next()){
                    tabMode.addRow(new Object[]{rs.getString(1)});
                }
            } catch (Exception e) {
                System.out.println("Notifikasi : "+e);
            } finally{
                if(rs!=null){
                    rs.close();
                }
                if(ps!=null){
                    ps.close();
                }
            }
        }catch(SQLException e){
            System.out.println("Notifikasi : "+e);
        }
    }

    private void getDatanorm() {
        int row=tbNoRM.getSelectedRow();
        if(row!= -1){
            norm.setText(tbNoRM.getValueAt(row,0).toString());
        }
    }

    public void emptTeks() {
        norm.setText("");
        norm.requestFocus();
    }
    
    private void tampilurut() {
        Valid.tabelKosong(tabMode2);
        try{
            ps2=koneksi.prepareStatement("select * from set_urut_no_rkm_medis ");
            try {
                rs=ps2.executeQuery();
                while(rs.next()){
                    tabMode2.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
                }
            } catch (Exception e) {
                System.out.println("Notifikasi : "+e);
            } finally{
                if(rs!=null){
                    rs.close();
                }
                if(ps2!=null){
                    ps2.close();
                }
            }
        }catch(Exception e){
            System.out.println("Notifikasi : "+e);
        }
    }
    
    private void getDataurut() {
        int row=tbNoUrut.getSelectedRow();
        if(row!= -1){
            cmburut.setSelectedItem(tbNoUrut.getValueAt(row,0).toString());
            cmbYesTahun.setSelectedItem(tbNoUrut.getValueAt(row,1).toString());
            cmbYesBulan.setSelectedItem(tbNoUrut.getValueAt(row,2).toString());
            cmbPosisi.setSelectedItem(tbNoUrut.getValueAt(row,3).toString());
        }
    }
    
    private void tampilalamat() {
        Valid.tabelKosong(tabMode3);
        try{
            ps3=koneksi.prepareStatement("select * from set_alamat_pasien ");
            try {
                rs=ps3.executeQuery();
                while(rs.next()){
                    tabMode3.addRow(new Object[]{
                        rs.getString(1).replaceAll("true","Yes").replaceAll("false","No"),
                        rs.getString(2).replaceAll("true","Yes").replaceAll("false","No"),
                        rs.getString(3).replaceAll("true","Yes").replaceAll("false","No")
                    });
                }
            } catch (Exception e) {
                System.out.println("Notifikasi : "+e);
            } finally{
                if(rs!=null){
                    rs.close();
                }
                if(ps3!=null){
                    ps3.close();
                }
            }
        }catch(Exception e){
            System.out.println("Notifikasi : "+e);
        }
    }
    
    private void getDataAlamat() {
        int row=tbAlamat.getSelectedRow();
        if(row!= -1){
            Kelurahan.setSelectedItem(tbAlamat.getValueAt(row,0).toString());
            Kecamatan.setSelectedItem(tbAlamat.getValueAt(row,1).toString());
            Kabupaten.setSelectedItem(tbAlamat.getValueAt(row,2).toString());
        }
    }
}
